// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL")
  url = "postgresql://admin:admin1234@localhost:5434/freelance_ai"
}


model UserSchema{
  user_id Int @id @default(autoincrement())
  Name String
  Email String @unique
  Password String
  Experience Int
  Rating Int
  Skills String[]
  Profile ProfileSchema ?
  ApplyJob ApplyJob[]
}

model ClientSchema{
  client_id Int @id @default(autoincrement())
  client_name String
  Email String @unique
  Password String
  Organization  String? @default("Personal")
  jobschema JobSchema[]
  ApplyJobs ApplyJob[]
}

model ProfileSchema{
  profile_id Int @id @default(autoincrement())
  About String
  ProjectLink String []
  userid Int  @unique 
  user       UserSchema   @relation(fields: [userid],references: [user_id])
   applyJobs    ApplyJob[]

}

model JobSchema{
  job_id Int @id @default(autoincrement())
  clientid Int
  Job_titile String
  Job_description String
  Budget String
  Timeline String
  client ClientSchema @relation(fields: [clientid],references: [client_id])
}

model ApplyJob{
  applyjobid Int @id @default(autoincrement())
  clientid Int
  userid Int
  user UserSchema @relation(fields: [userid],references: [user_id])
  client ClientSchema @relation(fields: [clientid],references: [client_id])
  profile     ProfileSchema @relation(fields: [userid], references: [userid],map: "profile_userid_fkey")
  jobtitle String
  budget String @default("0")
  timeline String @default("0")


} 